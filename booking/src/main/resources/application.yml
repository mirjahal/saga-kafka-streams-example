server:
  port: 8085

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/booking_db
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:root}

  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate.ddl-auto: create
    properties:
      hibernate.show_sql: false
      hibernate.format_sql: false

  kafka:
    bootstrap-servers:
      - ${KAFKA_URL:127.0.0.1:9092}
    consumer:
      group-id: booking
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific.avro.reader: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    properties:
      security:
        protocol: "PLAINTEXT"
      schema:
        registry:
          url: ${SCHEMA_REGISTRY_URL:http://127.0.0.1:8081}

logging:
  level:
    io.confluent.kafka: "error"
    org.apache.kafka: "error"

booking:
  topics:
    booking-create: br.com.concrete.booking_create_v1
    booking-result: br.com.concrete.booking_result_v1
    booking-cancel: br.com.concrete.booking_cancel_v1
    booking-confirm: br.com.concrete.booking_confirm_v1